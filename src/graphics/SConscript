# Default flags for most of the files, some my differ as aggresive optimizatiaons are used

# TODO: Option to disable AVX
# TODO: Option to enable AVX2

flags = ["-O3", "-m64", "-mavx", "-msse4.2", "-flto", "-idirafter ../../include/sys"]
debug_flags = ["-Og", "-g", "-mavx", "-msse4.2", "-m64", "-Wpedantic", "-idirafter ../../include/sys"]
quick_flags = ["-O", "-m64", "-msse4.2", "-idirafter ../../include/sys"]

Import('ARCH')
Import('BUILD_TYPE')
Import('TUNE')
Import('VULKAN')
Import('DEFINES')

flags.append("-march=" + ARCH)
debug_flags.append("-march=" + ARCH)
quick_flags.append("-march=" + ARCH)

flags.append("-mtune=" + TUNE)
debug_flags.append("-mtune=" + TUNE)
quick_flags.append("-mtune=" + TUNE)

env = Environment( CPPPATH = "../../include" )

if BUILD_TYPE == "FINAL":
    env.Append( CPPFLAGS = flags, CPPDEFINES = DEFINES )
    env.Append(CPPDEFINES = { "_PRODUCTION_" : None, "_MAVX_" : 1 }) # TODO: Set _MAVX_ to 2 if AVX2 is in use, not define _MAVX_ if AVX isn't in use
elif BUILD_TYPE == "DEBUG":
    env.Append( CPPFLAGS = flags, CPPDEFINES = DEFINES )
    env.Append(CPPDEFINES = { "_DEBUG_" : None, "_MAVX_" : 1 })
elif BUILD_TYPE == "QUICK":
    env.Append( CPPFLAGS = flags, CPPDEFINES = DEFINES )
    env.Append(CPPDEFINES = { "_QUICK_" : None }) # TODO: Option for enabling quick build with AVX and AVX2

Object('vkLoad.cpp')
